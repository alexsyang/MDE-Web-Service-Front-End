/*
 * File: app/view/MyFileUpload.js
 *
 * This file was generated by Sencha Architect version 2.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MyFileUpload', {
    extend: 'Ext.form.field.File',
    alias: 'widget.myfileupload',

    margin: '',
    padding: 5,
    width: 321,
    fieldLabel: '',
    emptyText: 'Please choose your file',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            listeners: {
                change: {
                    fn: me.onFilefieldChange,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onFilefieldChange: function(filefield, value, options) {
        var v = filefield.getValue();
        Ext.getCmp('dataTab').getForm().submit({   
            url: 'data-file-upload',
            waitMsg: 'Uploading your file ...',
            success: function(fp, o) {
                Ext.getCmp('dataTab').down('#description').setValue(o.result.data.description);
                var names = o.result.data.column;
                var _cols = [], _flds = [], _checkboxes = [];
                var _data = o.result.data.table;
                var index = 0;
                Ext.Array.each(names, function(f) {
                    _cols.push(Ext.create('Ext.grid.column.Column', {
                        text: f,
                        dataIndex: f
                    }));
                    _flds.push({name: f, type: 'double'
                    });
                    var checked = index++ == 1;
                    _checkboxes.push({
                        xtype: 'checkboxfield',
                        fieldLabel: '',
                        boxLabel: f,
                        checked: checked
                    });
                });
                _checkboxes.splice(0,1);
                
                var gridstore = Ext.create('Ext.data.ArrayStore', {
                    fields: _flds,
                    data: _data
                });

                var gridfieldset = Ext.getCmp("grid");

                gridfieldset.removeAll();
                gridfieldset.add({
                    xtype: 'fieldcontainer',
                    height: 35,
                    //width: 400,
                    layout: {
                        align: 'stretch',
                        type: 'hbox'
                    },
                    items: _checkboxes             
                });

                gridfieldset.add({
                    xtype: 'gridpanel',
                    autoScroll: true,
                    store: gridstore,
                    flex: 1,
                    columns: _cols
                });
            },

            failure: function() {
                Ext.Msg.alert('Error', 'Unable to load file data');
            }
        });
    }

});